What is debugging?
refers to the process of finding and fixing error in your source code.
What is bug? 
is a written code which doesnt give us diresired output.
is aglitch in software that prevents a programmfrom achieving the desired output.
is a mistake that prevents the programme to be excuted properly.
TYPES OF BUGS.
SYNTAX ERRORS
are errors that violates the syntax rules e.g spellingerrors,arguments
LOGICAL ERRORS
are errors that occurs when stops taken to solve a problem are not well done.OR occur when the process of solving the task at
DESIGN ERRORS.
are errors introduced into the system during the design process causing the progamm to do what it is progammed to do
RUNTIME ERRORS.
these occurs when the application tries to perform an operation that isnt allowed.
and they are only discovered at the point of running a script or progam.
e.g when you divide any number by zero(0),any calculation with a string
BUILDTIME ERRORS.


DEBUGGING CYCLE
writing the code
checking if it is working
if it is not working u do debugging
then debugging
then u keep coding or go back to step operation
BUG CYCLE.
coding.
try to break the code or testing.
if you suceed in breaking it ,then you 

TIPS FOR DEBUGGING
chatch your bugs early as possible
if the bug is not catch early it gets harder because the detials are not in your
STEPS OF DEBUGGING
plan your attack
backup your files(using version control/using github to keep track of changes in the software)
lsolate the block of code that could have the error ie commenting it output
finding the actual line/lines with error or bugs
fix the error dont patch it
test the fix you have just done
look for similar buggs

OTHER STEPS AND STRATEGIES
REPRODUCTIIBILITY
  The first step is to be able to reproduce the bug
  understand the cause and effect before you change the code

  REDUCTION
   finding the simplest test that exibits the bug ie reduce the search of the space because bugs are not random
   they come from somewhere within the code

   DEDUCTION
    understand what the programme is doing,since you cant be able to know there is bug if you dont know what is the code actually
    supposed to be doing

    PAIR PROGRAMMING
     someone else maybe able to see wrong assumption or mistakes u may have made
     helps u to explain or understand what u are trying to achieve.

     LEVERAGING EXPERIENCE FROM OTHERS
      Seeking solutions from more experienced programmers

    PREVENTIVE MEASURES TO AVOID BUGS
    Write clean and easy to read code ie indenting and not repeating yourself
    commenting :helps u to figure out which part of your code you would like to correct
    make one change at time
    test your code
      the unit test:
        test functional blocks of your code
      the interraction test
        test interraction btn the functional blocks of your code
      test with invaild and valid data
        testing if your code runs with invaild
    Defensive programming by adding error checking code and throwing exceptions(feedback)
    prioritising which features can be ommitted
    Incubating(sleeping)
    Brainstormming

 DEBUGGING TOOLS
   Breakpoints:
     These help u to see which part of the code is carrying the bug.
     printing out the contents of the variables

 Research and use a debugging tool of choice               
